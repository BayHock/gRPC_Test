// <auto-generated />
using System;
using GrpcServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GrpcServer.Migrations
{
    [DbContext(typeof(TestTrainsContext))]
    [Migration("20241025133522_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GrpcServer.ClassesDb.Epc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character(8)")
                        .IsFixedLength();

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Epc", (string)null);
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EpcEvent", b =>
                {
                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdEpc")
                        .HasColumnType("integer");

                    b.Property<int>("IdPath")
                        .HasColumnType("integer");

                    b.Property<int>("NumberInOrder")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Time");

                    b.HasIndex("IdEpc")
                        .IsUnique();

                    b.HasIndex("IdPath");

                    b.ToTable("EpcEvent", (string)null);
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EventAdd", b =>
                {
                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Direction")
                        .HasColumnType("boolean");

                    b.Property<int>("IdPath")
                        .HasColumnType("integer");

                    b.HasKey("Time");

                    b.ToTable("EventAdd", (string)null);
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EventArrival", b =>
                {
                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdPath")
                        .HasColumnType("integer");

                    b.Property<string>("TrainIndex")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("character(17)")
                        .IsFixedLength();

                    b.Property<string>("TrainNumber")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character(4)")
                        .IsFixedLength();

                    b.HasKey("Time");

                    b.ToTable("EventArrival", (string)null);
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EventDeparture", b =>
                {
                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdPath")
                        .HasColumnType("integer");

                    b.Property<string>("TrainIndex")
                        .IsRequired()
                        .HasMaxLength(17)
                        .HasColumnType("character(17)")
                        .IsFixedLength();

                    b.Property<string>("TrainNumber")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("character(4)")
                        .IsFixedLength();

                    b.HasKey("Time");

                    b.ToTable("EventDeparture", (string)null);
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EventSub", b =>
                {
                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Direction")
                        .HasColumnType("boolean");

                    b.Property<int>("IdPath")
                        .HasColumnType("integer");

                    b.HasKey("Time");

                    b.ToTable("EventSub", (string)null);
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.Park", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("AsuNumber")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character(2)")
                        .IsFixedLength();

                    b.Property<int>("Direction")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("Park_pkey");

                    b.ToTable("Park", (string)null);
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.Path", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("AsuNumber")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character(2)")
                        .IsFixedLength();

                    b.Property<int>("IdPark")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("Path_pkey");

                    b.HasIndex("IdPark");

                    b.ToTable("Path", (string)null);
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EpcEvent", b =>
                {
                    b.HasOne("GrpcServer.ClassesDb.Epc", "Epc")
                        .WithOne("EpcEvent")
                        .HasForeignKey("GrpcServer.ClassesDb.EpcEvent", "IdEpc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrpcServer.ClassesDb.Path", "Path")
                        .WithMany("EpcEvents")
                        .HasForeignKey("IdPath")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Epc");

                    b.Navigation("Path");
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EventAdd", b =>
                {
                    b.HasOne("GrpcServer.ClassesDb.EpcEvent", "EpcEvent")
                        .WithOne("EventAdd")
                        .HasForeignKey("GrpcServer.ClassesDb.EventAdd", "Time")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EpcEvent");
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EventArrival", b =>
                {
                    b.HasOne("GrpcServer.ClassesDb.EventAdd", "EventAdd")
                        .WithOne("EventArrival")
                        .HasForeignKey("GrpcServer.ClassesDb.EventArrival", "Time")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventAdd");
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EventDeparture", b =>
                {
                    b.HasOne("GrpcServer.ClassesDb.EventSub", "EventSub")
                        .WithOne("EventDeparture")
                        .HasForeignKey("GrpcServer.ClassesDb.EventDeparture", "Time")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventSub");
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EventSub", b =>
                {
                    b.HasOne("GrpcServer.ClassesDb.EpcEvent", "EpcEvent")
                        .WithOne("EventSub")
                        .HasForeignKey("GrpcServer.ClassesDb.EventSub", "Time")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EpcEvent");
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.Path", b =>
                {
                    b.HasOne("GrpcServer.ClassesDb.Park", "IdParkNavigation")
                        .WithMany("Paths")
                        .HasForeignKey("IdPark")
                        .IsRequired()
                        .HasConstraintName("FK_Path_Park");

                    b.Navigation("IdParkNavigation");
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.Epc", b =>
                {
                    b.Navigation("EpcEvent");
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EpcEvent", b =>
                {
                    b.Navigation("EventAdd");

                    b.Navigation("EventSub");
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EventAdd", b =>
                {
                    b.Navigation("EventArrival");
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.EventSub", b =>
                {
                    b.Navigation("EventDeparture");
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.Park", b =>
                {
                    b.Navigation("Paths");
                });

            modelBuilder.Entity("GrpcServer.ClassesDb.Path", b =>
                {
                    b.Navigation("EpcEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
